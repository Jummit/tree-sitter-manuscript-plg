============================================
Dialog in plg
============================================
﻿
{
	testDialog "Dialog"
	{
		Title "New Dialog"
	}
}

---

(data (table
  (def (label) (value) (table
    (def (label) (value))))))


============================================
Dialog as root in msd files
============================================
﻿
testDialog "Dialog"
{
    Title "New Dialog"
}

---

(data
  (def (label) (value) (table
    (def (label) (value)))))


============================================
Plg hash tables
============================================

{
    n {
        "a"
        { "b" }
    }
}

---

(data (table
  (def (label) (table
    (value) (table (value))))))

============================================
Mixed content hash tables
============================================

{
    NewData "foobar"
    {
        b "a"
        {
             "1"
             "2"
        }
         "00"
        c "bar"
    }
}

---

(data (table
  (def (label) (value) (table
    (def (label) (value) (table
        (value) (value)))
    (value)
    (def (label) (value))))))

============================================
Function in plg
============================================

{
    f "(){;}"
}

---

(data (table
  (function_def (function_label) (function))))

============================================
Functions and dialogs in plg
============================================


{
	TestDialog "Dialog" {}
	Run "(
	foo, bar
	) {
		;
  }
	"
}

---

(data (table
  (def (label) (value) (table))
  (function_def (function_label) (function))))

============================================
GLOBAL.mss
============================================

foo "bar"
bar "baz"

---

(data
  (def (label) (value))
  (def (label) (value)))

============================================
plg labels
============================================

{
	// "foo"
	1/2 "bar"
	-// "baz"
}

---

(data (table
  (doc_def (doclabel) (docstring))
  (def (label) (value))
  (def (label) (value))))

============================================
special plg values
============================================

{
	""
}

---

(data (table
  (empty_value)))

============================================
invalid labels
============================================

{
	@
}

---

(data (table
  (ERROR (UNEXPECTED '@'))))
